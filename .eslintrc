{
	"parser": "babel-eslint",
    "extends": ["airbnb-base", "vue"],
    "env": {
        "browser": true,
        "amd": true,
        "jquery": true
    },
    "parserOptions": {
        "ecmaVersion": 2017
        },
    "plugins": ["html"],
    "settings": {
        "html/html-extensions": [".html", ".vue"],
        "html/report-bad-indent": "error",
    },
    "rules": {

        // 多重定义
        "no-multi-assign": 1,
        // 允许出现alert, prompt 和 confirm
        "no-alert": 0,

        // 允许出现console
        "no-console": 0,

        // 允许出现debugger
        "no-debugger": 2,

        // 禁止不写分号
        "semi": [2, "always"],

        // 允许tabs
        "no-tabs": 0,

        // 禁止出现tab之外的缩进
        "indent": [2, "tab"],

        // 允许定义前使用
        "no-use-before-define": 0,

        // 允许if (!!foo) 这种形式
        "no-extra-boolean-cast": 0,

        // 允许对函数声明进行覆盖赋值
        "no-func-assign": 0,

        // 允许使用caller或callee
        "no-caller": 0,

        // 允许函数在不同的情况下返回不同类型的值
        "consistent-return": 0,

        // 允许在switch的case中不加break
        "no-fallthrough": 0,

        // 不建议使用__proto__
        "no-proto": 1,

        // 允许覆盖外部变量
        "no-shadow": 0,

        // 建议文件的最后一行是空白行
        "eol-last": 1,

        // 允许使用下划线开头命名变量
        "no-underscore-dangle": 0,

        // 建议将操作符放到行尾, 而不是行首
        "operator-linebreak": [1, "after"],

        // 建议使用已定义的变量
        "no-undef": 1,

        // 建议return语句中不要包含赋值表达式
        "no-return-assign": 1,

        // 建议代码列数不能超过120行
        "max-len": [1, {
            "code": 120,
            "ignoreStrings": true,
            "ignoreUrls": true,
            "ignoreTrailingComments": true
        }],

        // 建议启用严格模式
        "global-strict": 0,
        "strict": 1,

        // 建议使用单引号
        "quotes": [1, "single"],

        // 建议注释符要有空白隔开
        "spaced-comment": [1, "always"],

        // import相关配置
        // import允许省略文件格式
        "import/extensions": 0,
        "import/no-unresolved": 0,
        "import/no-extraneous-dependencies": 0,
        "import/no-dynamic-require": 0,
        "import/no-amd": 0,
        // 允许new
        "no-new": 0,
        // 允许短路写法
        "no-unused-expressions": [2, { "allowShortCircuit": true }],
        // 允许++
        "no-plusplus": 0,

        "no-mixed-spaces-and-tabs": 1,

        "space-before-function-paren": 0,

        // 允许变量在分配
        "no-param-reassign": [1, { "props": false }],

        "comma-dangle": [1, "ignore"],

        // 对象key可以使用大写字母
        "camelcase": ["error", { "properties": "never" }],
        "arrow-parens": ["error", "as-needed"],

        // 不强制要求优先使用const声明变量
        "prefer-const": [1, {
            "destructuring": "all",
            "ignoreReadBeforeAssign": false
        }],

        // 允许一个表达使用&&、||等多个拼接
        "no-mixed-operators": [
            1,
            {
                "groups": [
                    ["+", "-", "*", "/", "%", "**"],
                    ["&", "|", "^", "~", "<<", ">>", ">>>"],
                    ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
                    ["&&", "||"],
                    ["in", "instanceof"]
                ],
                "allowSamePrecedence": true
            }
        ],
        // 允许连续的多个var、let表达式
        "one-var": 0,

        // 允许使用三目运算符
        "no-nested-ternary": 1,
        // 不限制是否使用template
        "prefer-template": 0,

        // 允许使用位运算~
        "no-bitwise": ["error", { "allow": ["~"] }],

        // 允许使用js中关键字作为key
        "quote-props": [1, "as-needed", { "keywords": true }],
        //  可以使用 in , "BinaryExpression[operator='in']"  "FunctionExpression" 可以用fun
        "no-restricted-syntax": ["error", "WithStatement"],
        // 不限制function是否有name
        "func-names": [0],

        // function可以使用es5的语法
        "prefer-arrow-callback": [1, { "allowNamedFunctions": true }],

        // 可以使用var定义变量
        "no-var": 1,

        // 可以使用continue
        "no-continue": 1,

        // 允许使用 Math.pow
        "no-restricted-properties": [1, {
            "object": "Math",
            "property": "pow",
            "message": "Use the exponentiation operator (**) instead."
        }],

       // 可以在语句中使用require
			"global-require": 1,
			"class-methods-use-this": 0,
			"no-confusing-arrow": 0,
			"no-return-await": 0
    }
}
